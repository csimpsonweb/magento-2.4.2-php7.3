include             /etc/nginx/includes/*.map;

server{

    listen                  80 default_server;

    listen                  443 default_server ssl;

    set                     $MAGE_ROOT /var/www/html;

    server_name             default_server;

    include                 /etc/nginx/includes/ssl;

    root                    $MAGE_ROOT/pub;

    client_max_body_size    10M;

    add_header              X-Content-Type-Options nosniff;

    index                   index.php;

    autoindex               off;

    charset                 UTF-8;

    error_page              404 403 = /errors/404.php;

    include /etc/nginx/includes/wp;

    location /.user.ini {
        deny all;
    }

    location / {
        try_files $uri $uri/ /index.php$is_args$args;
    }

    location /pub/ {
        location ~ ^/pub/media/(downloadable|customer|import|theme_customization/.*\.xml) {
            deny all;
        }
        alias $MAGE_ROOT/pub/;
        add_header X-Frame-Options "SAMEORIGIN";
    }

    location /static/ {
        # Uncomment the following line in production mode
        # expires max;

        # Remove signature of the static files that is used to overcome the browser cache
        location ~ ^/static/version {
            rewrite ^/static/(version[^/]+/)?(.*)$ /static/$2 last;
        }

        location ~* \.(ico|jpg|jpeg|png|gif|svg|js|css|swf|eot|ttf|otf|woff|woff2)$ {
            add_header Cache-Control "public";
            add_header X-Frame-Options "SAMEORIGIN";
            expires +1y;

            if (!-f $request_filename) {
                rewrite ^/static/?(.*)$ /static.php?resource=$1 last;
            }
        }
        location ~* \.(zip|gz|gzip|bz2|csv|xml)$ {
            add_header Cache-Control "no-store";
            add_header X-Frame-Options "SAMEORIGIN";
            expires    off;

            if (!-f $request_filename) {
               rewrite ^/static/?(.*)$ /static.php?resource=$1 last;
            }
        }
        if (!-f $request_filename) {
            rewrite ^/static/?(.*)$ /static.php?resource=$1 last;
        }
        add_header X-Frame-Options "SAMEORIGIN";
    }

    location /media/ {

        ## The following section allows to offload image resizing from Magento instance to the Nginx.
        ## Catalog image URL format should be set accordingly.
        ## See https://docs.magento.com/user-guide/configuration/general/web.html#url-options

        location ~* ^/media/catalog/.* {

            # Replace placeholders and uncomment the line below to serve product images from public S3
            # See examples of S3 authentication at https://github.com/anomalizer/ngx_aws_auth
            # resolver 8.8.8.8;
            # proxy_pass https://<bucket-name>.<region-name>.amazonaws.com;

            set $width "-";
            set $height "-";
            if ($arg_width != '') {
                set $width $arg_width;
            }
            if ($arg_height != '') {
                set $height $arg_height;
            }
            #image_filter resize $width $height;
            #image_filter_jpeg_quality 100;
        }


        try_files $uri $uri/ /get.php$is_args$args;

        location ~ ^/media/theme_customization/.*\.xml {
            deny all;
        }

        location ~* \.(ico|jpg|jpeg|png|gif|svg|js|css|swf|eot|ttf|otf|woff|woff2|webp)$ {
            add_header Cache-Control "public";
            add_header X-Frame-Options "SAMEORIGIN";
            expires +1y;
            try_files $uri $uri/ /get.php$is_args$args;
        }
        location ~* \.(zip|gz|gzip|bz2|csv|xml)$ {
            add_header Cache-Control "no-store";
            add_header X-Frame-Options "SAMEORIGIN";
            expires    off;
            try_files $uri $uri/ /get.php$is_args$args;
        }
        add_header X-Frame-Options "SAMEORIGIN";
    }

    location /media/customer/ {
        deny all;
    }

    location /media/downloadable/ {
        deny all;
    }

    location /media/import/ {
        deny all;
    }

    location /media/custom_options/ {
        deny all;
    }

    location /errors/ {
        location ~* \.xml$ {
            deny all;
        }
    }

    # PHP entry point for main application
    location ~ ^/(index|get|static|errors/report|errors/404|errors/503|health_check)\.php$ {
        try_files $uri =404;
        fastcgi_param   MAGENTO_ROOT /var/www/html;
        include         /etc/nginx/includes/fastcgi;
    }

    include /etc/nginx/includes/gzip;

    location ~* (\.php$|\.phtml$|\.htaccess$|\.git) {
        deny all;
    }


}
